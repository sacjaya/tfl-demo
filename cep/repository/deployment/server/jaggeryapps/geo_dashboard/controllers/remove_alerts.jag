<%
/*
 ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~ http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 */

/* Includes */
var cepInfo = require('../include/commons.jag').cepInfo;
var removeAlert = require('../include/store_alerts.jag').remove;
var ws = require('ws');
var process = require("process"),host = process.getProperty('server.host'),
        ip = process.getProperty('carbon.local.ip');
var httpsPort = process.getProperty('mgt.transport.https.proxyPort');
if(!httpsPort){
    //can use http.port as well
    httpsPort = process.getProperty('mgt.transport.https.port');
}

var log = new Log();

var verb = request.getMethod();
var executionPlanName = request.getParameter('executionPlanName');
var queryName = request.getParameter('queryName');
var cepAction = request.getParameter('cepAction'); // i.e 'deploy' new executionPlan , 'edit' executionPlan and etc..
var type = request.getParameter('Type');


if(verb == "POST") {
    removeAlert(queryName,type);
    var cep = cepInfo();

    // Init ws request
    var version = new ws.WSRequest();
    var options = new Array();
    options.useSOAP = 1.2;
    options.useWSA = 1.0;
    var payload;

    if(cepAction == "undeploy"){
        options.action = "urn:undeployActiveExecutionPlan";
        payload = '<adm:undeployActiveExecutionPlan xmlns:adm="http://admin.processor.event.carbon.wso2.org">'
                +      '<adm:planName>'
                +     executionPlanName
                +     '</adm:planName>'
                +  '</adm:undeployActiveExecutionPlan>';
    }

    var result;
    log.info("DEBUG: payload "+payload);
    log.info("DEBUG: cepAction = "+cepAction+" options = "+options);

    var responseJson = { "status" :"" , "message" : ""};
    try {
        version.open(options, "https://"+ip+":"+httpsPort+"/services/EventProcessorAdminService.EventProcessorAdminServiceHttpsSoap12Endpoint/", false, cep.username, cep.password);
        version.send(payload);
        result = version.responseE4X;
        responseJson.status = "success";
        responseJson.message = "Fence removed successfully";
    } catch (e) {
        responseJson.status = "failed";
        responseJson.message = "Error occurred while removing the execution plan";
        log.error(e.toString());
    }
    print(responseJson);
}

%>

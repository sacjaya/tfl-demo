/* Enter a unique ExecutionPlan */
@Plan:name('PopulateTables')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */
@Import('rawTravelTimeStream:1.0.0')
define stream rawTravelTimeStream (from string, to string, travelTimeByBus long, travelTimeByBike long, travelTimeOnFoot long);

@Import('rawStopPointStream:1.0.0')
define stream rawStopPointStream (name string, id string, naptan string, sequence int, line string, direction int,
								  latitude double, longitude double);

@Import('rawTimetableStream:1.0.0')
define stream rawTimetableStream (id string, name string, direction int, t_day string, t_hour int, t_minute int);

@From(eventtable='rdbms', datasource.name='WSO2_GEO_DB', table.name='StopTable')
define table stopTable (name string, id string, naptan string, sequence int, line string, direction int,
						latitude double, longitude double);

@From(eventtable='rdbms', datasource.name='WSO2_GEO_DB', table.name='BusStopTimeTable')
define table busTimeTable (id string, name string, direction int, t_day string, t_hour int, t_minute int, minutesInDay int);

@From(eventtable='rdbms', datasource.name='WSO2_GEO_DB', table.name='TravelTimeTable')
define table travelTimeTable (fromStop string, toStop string, travelTimeByBus long, travelTimeByBike long, travelTimeOnFoot long);

from rawStopPointStream
insert into stopTable;

from rawTimetableStream
select id, name, direction, t_day, t_hour, t_minute, (t_hour * 60 + t_minute) as minutesInDay
insert into busTimeTable;

from rawTravelTimeStream
select from as fromStop, to as toStop, travelTimeByBus, travelTimeByBike, travelTimeOnFoot
insert into travelTimeTable;